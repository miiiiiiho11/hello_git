import numpy as np
import cv2

cap = cv2.VideoCapture(0)

# Define the codec and create VideoWriter object
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi',fourcc, 20.0, (640,480))

while(cap.isOpened()):
    ret, frame = cap.read()
    if ret==True:
        frame = cv2.flip(frame,0)

        # write the flipped frame
        out.write(frame)

        cv2.imshow('frame',frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    else:
        break

# Release everything if job is finished
cap.release()
out.release()
cv2.destroyAllWindows()

import cv2

video_path = "output.avi"
cap = cv2.VideoCapture(video_path)

# ïù
width = cap.get(cv2.CAP_PROP_FRAME_WIDTH)
# çÇÇ≥
height = cap.get(cv2.CAP_PROP_FRAME_HEIGHT)
# ëçÉtÉåÅ[ÉÄêî
count = cap.get(cv2.CAP_PROP_FRAME_COUNT)
# fps
fps = cap.get(cv2.CAP_PROP_FPS)

print("width:{}, height:{}, count:{}, fps:{}".format(width,height,count,fps))

import cv2
import numpy as np
import matplotlib.pyplot as plt

fig = plt.figure()

video_path = "output.avi"
cap = cv2.VideoCapture(video_path)

num = 0
x = []
y = []
while(cap.isOpened()):
    ret, frame = cap.read()
    if ret==True:
        cv2.imwrite("picture{:0=3}".format(num)+".jpg",frame)
        img = cv2.imread("picture{:0=3}".format(num)+".jpg",-1)
        mean = np.mean(img)
        x.append(num/10)
        y.append(mean)
        num += 1
    else:
        break

plt.plot(x,y)
plt.xlabel("second")
plt.ylabel("brightness value")
#plt.xlim(0, 15)
plt.ylim(54, 57)
plt.show()

cap.release()
